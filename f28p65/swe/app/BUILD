load("//toolchain:cc_binary_c2000.bzl", "cc_binary_c2000")
load("//toolchain:debug.bzl", "debug_rule")

# Application specific FreeRTOS configuration
# Only allowed to be included within os/include
cc_library(
    name = "app_defines",
    hdrs = [
        "appDefines.h"
    ],
    includes = ["."],
    visibility = ["//f28p65/swe/app:__subpackages__"],
)

cc_library(
    name = "free_rtos_app_config",
    hdrs = [
        "FreeRTOSConfig.h"
    ],
    includes = ["."],
    visibility = ["//f28p65/os/include:__subpackages__"],
)

cc_binary_c2000(
    name = "app",
    srcs = [
        "main.c",
    ],
    deps = [
        ":app_defines",
        "//f28p65/mcal:mcal_f28p65x",
        "//f28p65/public:public_types_h",
        "//f28p65/swe/app/tasks:task10msQm",
        "//f28p65/units:units_app",
    ],
    # Declare addation linker inputs - needed for linkopts
    additional_linker_inputs = [
        "//f28p65/swe/linker:linker_cmd_app",
    ],
    # Linker options
    linkopts = [
        "--library=$(location //f28p65/swe/linker:linker_cmd_app)",
    ],
)

cc_binary_c2000(
    name = "app_c2000",
    srcs = [
        ":app",
    ],
)

# cc_binary_c2000(
#     name = "app",
#     srcs = [
#         "main.c",
#     ],
#     deps = [
#         "//f28p65/public:public_types_h"
#     ],
#     # linker_files = "//f28p65/swe/linker:linker_scripts_app",
#     # linker_flags = C2000_LINKER_FLAGS_APP,
#     # output_name = "app",
#     # target_compatible_with = [":c2000_f28p65"]
# )

debug_rule(
    name = "check_libraries",
    dep = ":app",
)
